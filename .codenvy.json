{
  "v": "4.0",
  "workspace": {
    "environments": {
      "default": {
        "recipe": {
          "type": "dockerimage",
          "location": "bitnami/che-express:4.14.0-r18"
        },
        "machines": {
          "ws-machine": {
            "agents": [
              "org.eclipse.che.terminal",
              "org.eclipse.che.ws-agent",
              "org.eclipse.che.ssh"
            ],
            "servers": {},
            "attributes": {
              "memoryLimitsBytes": "1073741824"
            }
          }
        }
      }
    },
    "name": "express",
    "defaultEnv": "default",
    "projects": [
      {
        "name": "seed-sro-project",
        "type": "node-js",
        "path": "/express",
        "source": {
          "type": "git",
          "location": "https://gitlab-dev.stackroute.in/sachin/seed-sro-project.git",
          "parameters": {
            "keepVcs": "false"
          }
        },
        "mixins": [
          "pullrequest"
        ],
        "attributes": {
          "local_branch": ["contrib"],
          "contribute_to_branch": ["master"]
        },
        "modules": [],
        "problems": []
      }
    ],
    "commands": [
      {
        "name": "2. Run",
        "type": "custom",
        "commandLine": "print-help && cd ${current.project.path} && npm start",
        "attributes": {
          "previewUrl": "http://${server.port.3000}"
        }
      },
      {
        "name": "1. Create and run project",
        "type": "custom",
        "commandLine": "print-help && cd ${current.project.path} && npm install express@4.13.4 && express -f . && cp -rn /bitnami/mongodb/conf ${current.project.path} && npm install mongodb@2.1.18 --save && npm install && counter=0; until nc -z localhost 27017; do counter=$((counter+1)); if [ $counter == 10 ]; then echo \"Error: Couldn't connect to MongoDB.\"; exit 1; fi; echo \"Trying to connect to MongoDB at localhost. Attempt $counter.\"; sleep 5; done; echo \"Connected to MongoDB database. Starting application server.\" && npm start",
        "attributes": {
          "previewUrl": "http://${server.port.3000}"
        }
      }
    ]
  },
  "ide": {
    "onProjectsLoaded": {
      "actions": [
        {
          "id": "runCommand",
          "properties": {
            "name": "1. Create and run project"
          }
        }
      ]
    }
  }
}
